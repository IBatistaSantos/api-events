generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider    = "prisma-erd-generator"
  output      = "./erd.png"
  theme       = "dark"
  ignoreEnums = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  FREE
  ENTERPRISE
}

enum UserType {
  MASTER
  ADMIN
  MODERATOR
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model Account {
  id            String         @id @default(uuid())
  type          AccountType
  event         Boolean        @default(true)
  organization  Boolean        @default(true)
  checkin       Boolean        @default(true)
  certificate   Boolean        @default(false)
  campaign      Boolean        @default(false)
  lobby         Boolean        @default(false)
  videoLibrary  Boolean        @default(false)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  User          User[]
  organizations Organization[]

  @@map("accounts")
}

model InviteAccount {
  id           String      @id @default(uuid())
  name         String
  type         AccountType
  email        String      @unique
  token        String      @unique
  event        Boolean     @default(true)
  organization Boolean     @default(true)
  checkin      Boolean     @default(true)
  certificate  Boolean     @default(false)
  campaign     Boolean     @default(false)
  lobby        Boolean     @default(false)
  videoLibrary Boolean     @default(false)
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")

  @@map("invite_accounts")
}

model User {
  id               String             @id @default(uuid())
  name             String
  email            String
  password         String
  status           UserStatus         @default(ACTIVE)
  type             UserType           @default(ADMIN)
  account          Account            @relation(fields: [accountId], references: [id])
  accountId        String             @map("account_id")
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @updatedAt @map("updated_at")
  permissions      UserPermissions[]
  organizations    Organization[]
  UserOrganization UserOrganization[]

  @@map("users")
}

model Permissions {
  id          String            @id @default(uuid())
  name        String            @unique
  content     String
  description String
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  users       UserPermissions[]

  @@map("permissions")
}

model UserPermissions {
  userId       String       @map("user_id")
  permissionId String       @map("permission_id")
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  user         User         @relation(fields: [userId], references: [id])
  permission   Permissions? @relation(fields: [permissionId], references: [id])

  @@id([userId, permissionId])
  @@map("user_permissions")
}

model Organization {
  id          String     @id @default(uuid())
  name        String
  description String?
  accountId   String     @map("account_id")
  createdBy   String     @map("created_by")
  status      UserStatus @default(ACTIVE)
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")

  account          Account            @relation(fields: [accountId], references: [id])
  user             User               @relation(fields: [createdBy], references: [id])
  UserOrganization UserOrganization[]

  @@map("organizations")
}

model UserOrganization {
  userId         String       @map("user_id")
  organizationId String       @map("organization_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@id([userId, organizationId])
  @@map("user_organizations")
}
